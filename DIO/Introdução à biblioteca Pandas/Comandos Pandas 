import pandas as pd: Importa a biblioteca Pandas com o alias "pd", permitindo que você acesse seus recursos usando "pd".

pd.DataFrame(data): Cria um DataFrame a partir de dados existentes, como listas, dicionários ou arquivos CSV.

pd.read_csv('arquivo.csv'): Lê dados de um arquivo CSV e os carrega em um DataFrame.

df.head(): Retorna as primeiras linhas do DataFrame (por padrão, as cinco primeiras).

df.shape: Retorna o número de linhas e colunas no DataFrame.

df.columns: Retorna uma lista das colunas no DataFrame.

df.describe(): Gera um resumo estatístico das colunas numéricas do DataFrame.

df.info(): Fornece informações detalhadas sobre o DataFrame, incluindo tipos de dados e valores ausentes.

df['coluna']: Seleciona uma coluna específica do DataFrame.

df[df['coluna'] > valor]: Filtra o DataFrame com base em uma condição específica.

df.groupby('coluna').mean(): Calcula a média dos valores agrupados por uma coluna.

df['nova_coluna'] = valor: Adiciona uma nova coluna ao DataFrame.

df.drop('coluna', axis=1): Remove uma coluna do DataFrame.

df.isnull(): Retorna um DataFrame booleano indicando valores ausentes.

df.notnull(): Retorna um DataFrame booleano indicando valores não nulos.

df.duplicated(): Retorna um DataFrame booleano indicando linhas duplicadas.

df.sort_values(by='coluna'): Ordena o DataFrame com base em uma coluna específica.

df.fillna(valor): Preenche valores ausentes no DataFrame com um valor específico.

df.to_csv('novo_arquivo.csv', index=False): Salva o DataFrame em um arquivo CSV.

df.plot(): Cria visualizações básicas dos dados do DataFrame.

df.dropna(): Remove as linhas que contêm valores ausentes.

df.value_counts(): Conta a frequência dos valores únicos em uma coluna.

df.pivot_table(): Cria uma tabela dinâmica para resumir dados.

df.merge(df2, on='coluna_comum'): Realiza uma junção de DataFrames semelhante a uma operação SQL JOIN.

df.rename(columns={'coluna_antiga': 'coluna_nova'}): Renomeia colunas do DataFrame.

df.drop_duplicates(): Remove linhas duplicadas do DataFrame.

df.iloc[linha, coluna]: Seleciona dados por índices numéricos.

df.loc[filtro]: Seleciona dados com base em condições lógicas.

df.groupby(['coluna1', 'coluna2']).mean(): Realiza uma agregação com base em várias colunas.

df.apply(função): Aplica uma função a uma coluna ou linha.

df.value_counts(normalize=True): Retorna a frequência relativa dos valores únicos em uma coluna.

df.sample(n): Seleciona aleatoriamente um número específico de linhas do DataFrame.

df.sort_index(): Ordena o DataFrame com base nos índices.

df['coluna'].str.method(): Aplica métodos de string a uma coluna (por exemplo, .str.contains()).

df['coluna'].astype(tipo): Converte o tipo de dados de uma coluna.

pd.concat([df1, df2]): Concatena DataFrames verticalmente ou horizontalmente.

df.dropna(subset=['coluna']): Remove linhas com valores ausentes em uma coluna específica.

df['coluna'].unique(): Retorna uma matriz de valores únicos em uma coluna.

df.nlargest(n, 'coluna'): Retorna as 'n' maiores entradas com base em uma coluna.

df.nsmallest(n, 'coluna'): Retorna as 'n' menores entradas com base em uma coluna.